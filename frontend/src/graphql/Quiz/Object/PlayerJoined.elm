-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Quiz.Object.PlayerJoined exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Quiz.InputObject
import Quiz.Interface
import Quiz.Object
import Quiz.Scalar
import Quiz.ScalarCodecs
import Quiz.Union


playerId : SelectionSet String Quiz.Object.PlayerJoined
playerId =
    Object.selectionForField "String" "playerId" [] Decode.string


name : SelectionSet String Quiz.Object.PlayerJoined
name =
    Object.selectionForField "String" "name" [] Decode.string


allPlayers :
    SelectionSet decodesTo Quiz.Object.KVStringString
    -> SelectionSet (List decodesTo) Quiz.Object.PlayerJoined
allPlayers object____ =
    Object.selectionForCompositeField "allPlayers" [] object____ (identity >> Decode.list)
