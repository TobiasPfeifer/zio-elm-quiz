-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Quiz.Subscription exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Quiz.InputObject
import Quiz.Interface
import Quiz.Object
import Quiz.Scalar
import Quiz.ScalarCodecs
import Quiz.Union


test : SelectionSet String RootSubscription
test =
    Object.selectionForField "String" "test" [] Decode.string


type alias JoinGameRequiredArguments =
    { gamePin : String
    , playerName : String
    }


joinGame :
    JoinGameRequiredArguments
    -> SelectionSet decodesTo Quiz.Union.Event
    -> SelectionSet (Maybe decodesTo) RootSubscription
joinGame requiredArgs____ object____ =
    Object.selectionForCompositeField "joinGame" [ Argument.required "gamePin" requiredArgs____.gamePin Encode.string, Argument.required "playerName" requiredArgs____.playerName Encode.string ] object____ (identity >> Decode.nullable)
